{"version":3,"sources":["p2-homeworks/h3/Greeting.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","style","item","src","avatar","alt","angle","content","name","message","time","HW1","messageData","Affair","affairStyle","affair","affairStyle1","priority","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","key","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","el","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","s","HW3","value","onChange","errorClass","GreetingContainer","users","addUserCallback","setName","setError","length","e","currentTarget","alert","setUsers","homeworkTitle","newUsers","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","HW4","text","setText","showAlert","checked","setChecked","column","blue","disabled","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.05018b56.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"HW3\":\"Greeting_HW3__2UOxX\",\"homeworkTitle\":\"Greeting_homeworkTitle__31E4P\",\"inputClass\":\"Greeting_inputClass__14GLD\",\"errorClass\":\"Greeting_errorClass__132GU\",\"error\":\"Greeting_error__1uvQ8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Message_item__3o67J\",\"content\":\"Message_content__Ltxgc\",\"angle\":\"Message_angle__1T-oN\",\"name\":\"Message_name__Tzmp0\",\"message\":\"Message_message__8WR15\",\"time\":\"Message_time__HOFTG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"affairStyle\":\"Affairs_affairStyle__3-piX\",\"affairStyle1\":\"Affairs_affairStyle1__3Wfq_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3XH9u\",\"errorInput\":\"SuperInputText_errorInput__3ei0N\",\"error\":\"SuperInputText_error__2J82S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2RJeg\",\"column\":\"HW4_column__2ZS4I\",\"testSpanError\":\"HW4_testSpanError___Mj8X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__-BXUG\",\"red\":\"SuperButton_red__1kaz_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__Imn1x\",\"spanClassName\":\"SuperCheckbox_spanClassName__1K9ch\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1Sc4o\"};","import React from 'react'\nimport style from './Message.module.css'\n\ntype MessagePropsType = {\n    avatar: any\n    name: string\n    message: string\n    time: string\n}\n\nfunction Message(props: MessagePropsType) {\n    return (\n        <div>\n            <div className={style.item}>\n                <img src={props.avatar} alt='avatar'></img>\n                <div className={style.angle}></div>\n                <div className={style.content}>\n                    <div className={style.name}>\n                        {props.name}\n                    </div>\n                    <div className={style.message}>\n                        {props.message}\n                    </div>\n                    <div className={style.time}>\n                        {props.time}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from \"./Message\";\n\n\nfunction HW1() {\n    const messageData = {\n        avatar: 'https://upload.wikimedia.org/wikipedia/commons/thumb/3/34/Elon_Musk_Royal_Society_%28crop2%29.jpg/1024px-Elon_Musk_Royal_Society_%28crop2%29.jpg',\n        name: 'Elon Musk',\n        message: 'I have an offer for you, call me when you have a time',\n        time: '11:00',\n    }\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            should work (должно работать)\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport {AffairType} from \"./HW2\";\nimport style from './Affairs.module.css'\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (id: number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {\n        props.deleteAffairCallback(props.affair._id)\n    }// need to fix\n    return (\n        <div>\n            <div className={style.affairStyle}>\n                 <div className={style.affairStyle}>{props.affair.name}</div>\n                <div className={style.affairStyle1}>{props.affair.priority}</div>\n            </div>\n            <div className={style.affairStyle}>\n                <button onClick={deleteCallback}>X</button>\n            </div>\n        </div>\n\n\n    )\n}\n\nexport default Affair","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\n\ntype AffairsPropsType = { // need to fix any\n    data: AffairType[]\n    setFilter: (filter: FilterType) => void\n    deleteAffairCallback: (id: number) => void\n\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {\n        props.setFilter('all')\n    } // need to fix\n    const setHigh = () => {\n        props.setFilter('high')\n    }\n    const setMiddle = () => {\n        props.setFilter('middle')\n    }\n    const setLow = () => {\n        props.setFilter('low')\n    }\n    return (\n        <div>\n            {mappedAffairs}\n\n            <button onClick={setAll}>All</button>\n            <button onClick={setHigh}>High</button>\n            <button onClick={setMiddle}>Middle</button>\n            <button onClick={setLow}>Low</button>\n        </div>\n    )\n}\n\nexport default Affairs","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = 'high' | 'low' | 'middle'\nexport type AffairType = {\n    _id : number\n    name : string\n    priority: AffairPriorityType\n}\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: AffairType[] = [ // need to fix any\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: AffairType[], filter: FilterType): AffairType[] => { // need to fix any\n    if (filter === 'all') return affairs\n    if (filter === 'high') return affairs.filter(el => el.priority === 'high')\n    if (filter === 'middle') return affairs.filter(el => el.priority === 'middle')\n    if (filter === 'low') return affairs.filter(el => el.priority === 'low')\n    else {}\n        return []\n}\nexport const deleteAffair = (affairs: AffairType[], _id: number): AffairType[] => { // need to fix any\n    return affairs.filter(a => a._id !== _id)\n    // need to fix\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2","import React, {ChangeEvent} from 'react'\nimport s from './Greeting.module.css'\n\ntype GreetingPropsType = {\n    name: string\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void\n    addUser: () => void\n    error: string\n    totalUsers: number\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n    const inputClass = s.error // need to fix with (?:)\n    \n    return (\n        <div className={s.HW3}>\n            <input value={name} onChange={setNameCallback} className={inputClass}/>\n            <span className={s.errorClass}> {error}</span>\n            <button onClick={addUser}>add</button>\n            <span>{totalUsers}</span>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: UserType[]\n    addUserCallback: (user: string) => void\n}\n\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('')\n    const [error, setError] = useState<string>('')\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        setName(e.currentTarget.value)\n    }\n    const addUser = () => {\n        if (name !== ('')) {\n            addUserCallback(name)\n            alert(`Hello  ${name}!`)\n            setError('')\n            setName('')\n        } else {\n            setError('Name is required')\n        }\n    }\n\n    \n    const totalUsers = users.length\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    )\n}\n\nexport default GreetingContainer","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport s from './Greeting.module.css'\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string\n    name: string\n}\n\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<UserType[]>([])\n\n    const addUserCallback = (name: string) => {\n        const newUser = {_id: v1(), name}\n        const newUsers = [newUser, ...users]\n        setUsers(newUsers)\n    }\n\n    return (\n        <div className={s.HW3}>\n            <hr/>\n           <div className={s.homeworkTitle}>homeworks 3</div>\n            <GreetingContainer users={users}\n                               addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n        \n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.errorInput} ${className}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled >\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\n\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW5/>*/}\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}